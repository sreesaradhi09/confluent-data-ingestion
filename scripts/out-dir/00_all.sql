-- ===== VIEWS =====
-- >>> CBA_CI_ADR_view
CREATE VIEW CBA_CI_ADR_view AS
SELECT
  CAST(NULLIF(TRIM(JSON_VALUE(CAST(val AS STRING), '$.ADR_ID')), '') AS INT) AS ADR_ID,
  CAST(NULLIF(TRIM(JSON_VALUE(CAST(val AS STRING), '$.CI_ID')), '') AS INT) AS CI_ID,
  CAST(TRIM(JSON_VALUE(CAST(val AS STRING), '$.CITY')) AS STRING) AS CITY,
  CAST(NULLIF(TRIM(JSON_VALUE(CAST(val AS STRING), '$.CI_ADR_CAN_DT')), '') AS DATE) AS CI_ADR_CAN_DT,
  CAST(NULLIF(TRIM(JSON_VALUE(CAST(val AS STRING), '$.CI_ADR_EFF_DT')), '') AS DATE) AS CI_ADR_EFF_DT,
  CAST(TRIM(JSON_VALUE(CAST(val AS STRING), '$.CI_ADR_QLFR_C')) AS STRING) AS CI_ADR_QLFR_C,
  CAST(TRIM(JSON_VALUE(CAST(val AS STRING), '$.CI_AL_1')) AS STRING) AS CI_AL_1,
  CAST(TRIM(JSON_VALUE(CAST(val AS STRING), '$.CI_AL_2')) AS STRING) AS CI_AL_2,
  CAST(TRIM(JSON_VALUE(CAST(val AS STRING), '$.CI_AL_3')) AS STRING) AS CI_AL_3,
  CAST(TRIM(JSON_VALUE(CAST(val AS STRING), '$.CI_AL_4')) AS STRING) AS CI_AL_4,
  CAST(TRIM(JSON_VALUE(CAST(val AS STRING), '$.CI_CNTRY_C')) AS STRING) AS CI_CNTRY_C,
  CAST(TRIM(JSON_VALUE(CAST(val AS STRING), '$.CI_CNTY_C')) AS STRING) AS CI_CNTY_C,
  CAST(TRIM(JSON_VALUE(CAST(val AS STRING), '$.CI_CY')) AS STRING) AS CI_CY,
  CAST(TRIM(JSON_VALUE(CAST(val AS STRING), '$.CI_ST')) AS STRING) AS CI_ST,
  CAST(TRIM(JSON_VALUE(CAST(val AS STRING), '$.CI_Z_C')) AS STRING) AS CI_Z_C,
  CAST(TRIM(JSON_VALUE(CAST(val AS STRING), '$.COUNTRY')) AS STRING) AS COUNTRY,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.IS_PRIMARY') AS BOOLEAN) AS IS_PRIMARY,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.LAST_MTN_DT') AS DATE) AS LAST_MTN_DT,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.LAST_MTN_ID') AS STRING) AS LAST_MTN_ID,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.LAST_MTN_TM') AS STRING) AS LAST_MTN_TM,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.LINE1') AS STRING) AS LINE1,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.STATE') AS STRING) AS STATE,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.SYS_STUS_C') AS STRING) AS SYS_STUS_C,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.UPDT_SEQ_N') AS INT) AS UPDT_SEQ_N,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.ZIP') AS STRING) AS ZIP
FROM `ClientRepo-Kafka-Topic` a
WHERE JSON_VALUE(CAST(val AS STRING), '$.INFA_TABLE_NAME') LIKE '%_CBA_CI_ADR';

-- >>> CBA_CI_CTCOV_view
CREATE VIEW CBA_CI_CTCOV_view AS
SELECT
  CAST(NULLIF(TRIM(SPLIT_INDEX(CAST(val AS STRING), ',', 0)), '') AS INT) AS CI_ID,
  CAST(TRIM(SPLIT_INDEX(CAST(val AS STRING), ',', 1)) AS STRING) AS CLI_ID,
  CAST(TRIM(SPLIT_INDEX(CAST(val AS STRING), ',', 2)) AS STRING) AS CNTR_ID
FROM `ClientRepo-Kafka-Topic` cov
WHERE JSON_VALUE(CAST(val AS STRING), '$.INFA_TABLE_NAME') LIKE '%_CBA_CI_CTCOV';

-- >>> CBA_CI_view
CREATE VIEW CBA_CI_view AS
SELECT
  CAST(JSON_VALUE(CAST(val AS STRING), '$.CI_ID') AS INT) AS CI_ID,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.BPD_ID') AS INT) AS BPD_ID,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.CI_BIR_DT') AS DATE) AS CI_BIR_DT,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.CI_FRST_NM') AS STRING) AS CI_FRST_NM,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.CI_LAST_NM') AS STRING) AS CI_LAST_NM,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.CI_MID_NM') AS STRING) AS CI_MID_NM,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.CI_PFX_NM') AS STRING) AS CI_PFX_NM,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.CI_SEX_C') AS STRING) AS CI_SEX_C,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.CI_SFX_NM') AS STRING) AS CI_SFX_NM,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.CI_SSN_ID') AS STRING) AS CI_SSN_ID,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.CNSM_ID') AS STRING) AS CNSM_ID,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.EMP_STUS_C') AS STRING) AS EMP_STUS_C,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.NSMIR_CD') AS STRING) AS NSMIR_CD,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.UPDT_SEQ_N') AS INT) AS UPDT_SEQ_N
FROM `ClientRepo-Kafka-Topic` cba
WHERE JSON_VALUE(CAST(val AS STRING), '$.INFA_TABLE_NAME') LIKE '%_CBA_CI';

-- >>> CLH_CL_N_view
CREATE VIEW CLH_CL_N_view AS
SELECT
  CAST(JSON_VALUE(CAST(val AS STRING), '$.CL_ID') AS INT) AS CL_ID,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.CL_N') AS STRING) AS CL_N,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.BPD_ID') AS INT) AS BPD_ID,
  CAST(JSON_VALUE(CAST(val AS STRING), '$.CL_ENSRC_C') AS STRING) AS CL_ENSRC_C
FROM `ClientRepo-Kafka-Topic` clh
WHERE JSON_VALUE(CAST(val AS STRING), '$.INFA_TABLE_NAME') LIKE '%_CLH_0000';

-- ===== TABLES (Kafka + Avro) =====
-- >>> XREF_CBA_CI
CREATE TABLE IF NOT EXISTS XREF_CBA_CI (
  CI_ID INT,
  BPD_ID INT,
  CLI_ID STRING,
  CL_ENSRC_C STRING,
  PRIMARY KEY (CI_ID) NOT ENFORCED
)
WITH (
  'value.format' = 'avro-registry', 'changelog.mode' = 'upsert'
);

-- >>> XREF_CBA_CI_CTCOV
CREATE TABLE IF NOT EXISTS XREF_CBA_CI_CTCOV (
  CI_ID INT,
  BPD_ID INT,
  CLI_ID STRING,
  CL_ENSRC_C STRING,
  PRIMARY KEY (CI_ID) NOT ENFORCED
)
WITH (
  'value.format' = 'avro-registry', 'changelog.mode' = 'upsert'
);

-- >>> XREF_CLH_CL_N
CREATE TABLE IF NOT EXISTS XREF_CLH_CL_N (
  CL_ID INT,
  CL_N STRING,
  BPD_ID INT,
  CL_ENSRC_C STRING,
  PRIMARY KEY (CL_ID, CL_N) NOT ENFORCED
)
WITH (
  'value.format' = 'avro-registry', 'changelog.mode' = 'upsert'
);

-- >>> FGAC_CBA_CI_ADR_REF
CREATE TABLE IF NOT EXISTS FGAC_CBA_CI_ADR_REF (
  ADR_ID INT,
  CI_ID INT,
  CITY STRING,
  CI_ADR_CAN_DT DATE,
  CI_ADR_EFF_DT DATE,
  CI_ADR_QLFR_C STRING,
  CI_AL_1 STRING,
  CI_AL_2 STRING,
  CI_AL_3 STRING,
  CI_AL_4 STRING,
  CI_CNTRY_C STRING,
  CI_CNTY_C STRING,
  CI_CY STRING,
  CI_ST STRING,
  CI_Z_C STRING,
  LAST_MTN_DT DATE,
  LAST_MTN_ID STRING,
  LAST_MTN_TM STRING,
  LINE1 STRING,
  REGION STRING,
  STATE STRING,
  SYS_STUS_C STRING,
  UPDT_SEQ_N INT,
  ZIP STRING,
  PRIMARY KEY (ADR_ID, CI_ID) NOT ENFORCED
)
WITH (
  'value.format' = 'avro-registry'
);

-- ===== INSERT STATEMENT SET =====
EXECUTE STATEMENT SET
BEGIN

-- >>> XREF_CBA_CI
INSERT INTO XREF_CBA_CI (CI_ID, BPD_ID, CLI_ID, CL_ENSRC_C)
SELECT
  CAST(cba.CI_ID AS INT) AS CI_ID,
  CAST(ctcov.BPD_ID AS INT) AS BPD_ID,
  ctcov.CLI_ID AS CLI_ID,
  ctcov.CL_ENSRC_C AS CL_ENSRC_C
FROM `CBA_CI_view` cba
  LEFT JOIN XREF_CBA_CI_CTCOV ctcov ON cba.CI_ID = ctcov.CI_ID;

-- >>> XREF_CBA_CI_CTCOV
INSERT INTO XREF_CBA_CI_CTCOV (CI_ID, BPD_ID, CLI_ID, CL_ENSRC_C)
SELECT
  CAST(cov.CI_ID AS INT) AS CI_ID,
  CAST(clh.BPD_ID AS INT) AS BPD_ID,
  cov.CLI_ID AS CLI_ID,
  clh.CL_ENSRC_C AS CL_ENSRC_C
FROM `CBA_CI_CTCOV_view` cov
  LEFT JOIN XREF_CLH_CL_N clh ON TRIM(clh.CL_N)=TRIM(cov.CNTR_ID);

-- >>> XREF_CLH_CL_N
INSERT INTO XREF_CLH_CL_N (CL_ID, CL_N, BPD_ID, CL_ENSRC_C)
SELECT
  CAST(CL_ID AS INT) AS CL_ID,
  CL_N AS CL_N,
  CAST(BPD_ID AS INT) AS BPD_ID,
  CL_ENSRC_C AS CL_ENSRC_C
FROM `CLH_CL_N_view` clh;

-- >>> FGAC_CBA_CI_ADR_REF
INSERT INTO FGAC_CBA_CI_ADR_REF (ADR_ID, CI_ID, CITY, CI_ADR_CAN_DT, CI_ADR_EFF_DT, CI_ADR_QLFR_C, CI_AL_1, CI_AL_2, CI_AL_3, CI_AL_4, CI_CNTRY_C, CI_CNTY_C, CI_CY, CI_ST, CI_Z_C, LAST_MTN_DT, LAST_MTN_ID, LAST_MTN_TM, LINE1, REGION, STATE, SYS_STUS_C, UPDT_SEQ_N, ZIP)
SELECT
  a.ADR_ID AS ADR_ID,
  p.CI_ID AS CI_ID,
  a.CITY AS CITY,
  a.CI_ADR_CAN_DT AS CI_ADR_CAN_DT,
  a.CI_ADR_EFF_DT AS CI_ADR_EFF_DT,
  a.CI_ADR_QLFR_C AS CI_ADR_QLFR_C,
  a.CI_AL_1 AS CI_AL_1,
  a.CI_AL_2 AS CI_AL_2,
  a.CI_AL_3 AS CI_AL_3,
  a.CI_AL_4 AS CI_AL_4,
  a.CI_CNTRY_C AS CI_CNTRY_C,
  a.CI_CNTY_C AS CI_CNTY_C,
  a.CI_CY AS CI_CY,
  a.CI_ST AS CI_ST,
  a.CI_Z_C AS CI_Z_C,
  a.LAST_MTN_DT AS LAST_MTN_DT,
  a.LAST_MTN_ID AS LAST_MTN_ID,
  a.LAST_MTN_TM AS LAST_MTN_TM,
  a.LINE1 AS LINE1,
  e.region AS REGION,
  a.STATE AS STATE,
  a.SYS_STUS_C AS SYS_STUS_C,
  a.UPDT_SEQ_N AS UPDT_SEQ_N,
  a.ZIP AS ZIP
FROM `CBA_CI_ADR_view` a
  INNER JOIN XREF_CBA_CI p ON a.CI_ID = p.CI_ID;

END;
